#pragma checksum "/Users/Aelien/Documents/c#/WebApplication1/Pages/Todo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4fbf0e2096da1437ce4c40ade6264a71c73a4674"
// <auto-generated/>
#pragma warning disable 1591
namespace WebApplication1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using WebApplication1;
    using WebApplication1.Shared;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Components.RouteAttribute("/todo")]
    public class Todo : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "h1");
            builder.AddContent(1, "Todo (Items left todo ");
            builder.AddContent(2, todos.Where(todo => !todo.IsDone).Count());
            builder.AddContent(3, ")");
            builder.CloseElement();
            builder.AddContent(4, "\n\n");
            builder.OpenElement(5, "ul");
            builder.AddContent(6, "\n");
#line 6 "/Users/Aelien/Documents/c#/WebApplication1/Pages/Todo.cshtml"
     foreach (var todo in todos)
    {

#line default
#line hidden
            builder.AddContent(7, "        ");
            builder.OpenElement(8, "li");
            builder.AddContent(9, "\n            ");
            builder.OpenElement(10, "input");
            builder.AddAttribute(11, "type", "checkbox");
            builder.AddAttribute(12, "checked", Microsoft.AspNetCore.Components.BindMethods.GetValue(todo.IsDone));
            builder.AddAttribute(13, "onchange", Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(__value => todo.IsDone = __value, todo.IsDone));
            builder.CloseElement();
            builder.AddContent(14, "\n            ");
            builder.OpenElement(15, "input");
            builder.AddAttribute(16, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(todo.Title));
            builder.AddAttribute(17, "onchange", Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(__value => todo.Title = __value, todo.Title));
            builder.CloseElement();
            builder.AddContent(18, "\n        ");
            builder.CloseElement();
            builder.AddContent(19, "\n");
#line 12 "/Users/Aelien/Documents/c#/WebApplication1/Pages/Todo.cshtml"
    }

#line default
#line hidden
            builder.CloseElement();
            builder.AddContent(20, "\n\n");
            builder.OpenElement(21, "input");
            builder.AddAttribute(22, "placeholder", "Something todo");
            builder.AddAttribute(23, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(newTodo));
            builder.AddAttribute(24, "onchange", Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(__value => newTodo = __value, newTodo));
            builder.CloseElement();
            builder.AddContent(25, "\n");
            builder.OpenElement(26, "button");
            builder.AddAttribute(27, "onclick", Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Components.UIMouseEventArgs>(AddTodo));
            builder.AddContent(28, "Add todo");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 18 "/Users/Aelien/Documents/c#/WebApplication1/Pages/Todo.cshtml"
            
    IList<TodoItem> todos = new List<TodoItem>();
        string newTodo;

    void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
